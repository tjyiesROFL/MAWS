// <auto-generated />
using System;
using MAWS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MAWS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MAWS.Models.AcademicStaff", b =>
                {
                    b.Property<string>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcademicStaffID")
                        .IsRequired()
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(6)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("ContractExpiryDate")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeStatus")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)");

                    b.Property<decimal>("FTBaseHrs")
                        .HasColumnType("NUMERIC(4,0)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<decimal>("TeachingMax_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("WorkFraction")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("WorkHrs")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Numeric(6,2)")
                        .HasComputedColumnSql("\"WorkFraction\"*\"FTBaseHrs\"");

                    b.Property<decimal>("WorkMax_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.HasKey("StaffID");

                    b.HasAlternateKey("AcademicStaffID")
                        .HasName("AcademicStaffID");

                    b.ToTable("AcademicStaff");
                });

            modelBuilder.Entity("MAWS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RoleTitle")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("MAWS.Models.AspNetUserAcademicStaff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("StaffID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StaffID")
                        .IsUnique();

                    b.ToTable("AspNetUserAcademicStaff");
                });

            modelBuilder.Entity("MAWS.Models.Discipline", b =>
                {
                    b.Property<string>("DisciplineID")
                        .HasColumnType("VARCHAR(6)");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CP_12ptRatio")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("CP_3ptRatio")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("CP_6ptRatio")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("CP_9ptRatio")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("HeadOfDiscipline")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<decimal>("Marking_ExamHrsPS")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("OUAE_AttentionHrsPS")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("OUAE_MarkingHrsPS")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("PU_AdditionalClassHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("PU_BaseHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("PU_BaseHrsExtra")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal?>("PU_BaseHrsTNE")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("PU_OtherTeaching")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("PU_StaffAsClientHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("PU_StaffAsClientHrsTNE")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("PU_SupervisorHrsPP")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("SGT_FirstHrsPH")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("SGT_FirstSessionCount")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("SGT_MarkingHrsPS")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("SGT_SubsequentHrsPH")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("VARCHAR(6)");

                    b.Property<decimal>("UCM_AdditionalHrsPerStudent")
                        .HasColumnType("NUMERIC(6,5)");

                    b.Property<decimal>("UCM_BaseStudents")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_DevelopNewUnitBaseHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_DevelopNewUnitDigitallyEnhancedHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_DevelopNewUnitDiscretionHrsMax")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_ExternalHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_NewUCHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_TNE_CMAdditionalHrsPerAffiliate")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_TNE_CMBaseAffiliates")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("UCM_TNE_CMBaseHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_TNE_CMBaseStudents")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<decimal>("UCM_TNE_SetupHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_UpdateHrs_Major")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("UCM_UpdateHrs_Minor")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("U_BaseHrs_Tier1")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("U_BaseHrs_Tier2")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("U_BaseHrs_Tier3")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("WOCT_FirstHrsPH")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("WOCT_RepeatHRsPH")
                        .HasColumnType("NUMERIC(3,2)");

                    b.HasKey("DisciplineID");

                    b.HasIndex("HeadOfDiscipline")
                        .IsUnique();

                    b.ToTable("Discipline");
                });

            modelBuilder.Entity("MAWS.Models.MiscTeachingActivity", b =>
                {
                    b.Property<int>("MiscTeachingActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Hours")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<string>("MiscName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(55)");

                    b.Property<string>("TeachingPeriod")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("UnitOfferingID")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("MiscTeachingActivityID");

                    b.HasIndex("AcademicStaffID");

                    b.HasIndex("UnitOfferingID");

                    b.ToTable("MiscTeachingActivity");
                });

            modelBuilder.Entity("MAWS.Models.MiscTeachingActivity_audit", b =>
                {
                    b.Property<char>("operation")
                        .HasColumnType("Char(1)");

                    b.Property<DateTime>("stamp")
                        .HasColumnType("Timestamp");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Hours")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<string>("MiscName")
                        .HasColumnType("VARCHAR(55)");

                    b.Property<int>("MiscTeachingActivityID")
                        .HasColumnType("integer");

                    b.Property<string>("TeachingPeriod")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("UnitOfferingID")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("operation", "stamp");

                    b.ToTable("MiscTeachingActivity_audit");
                });

            modelBuilder.Entity("MAWS.Models.Research", b =>
                {
                    b.Property<string>("ResearchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<decimal>("Completions_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("Discretionary_Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<decimal?>("Discretionary_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("ECR_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("Fifteen_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<bool>("IS_CURRENT")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Income_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal?>("Percentage")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("NUMERIC(3,2)")
                        .HasComputedColumnSql("\"Fifteen_Pc\"+\"ECR_Pc\"+\"Income_Pc\"+\"Completions_Pc\"+\"Pubs_Pc\"+\"RCI_Pc\"+\"Discretionary_Pc\"");

                    b.Property<decimal>("Pubs_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("RCI_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("ResearchID");

                    b.HasIndex("AcademicStaffID");

                    b.ToTable("Research");
                });

            modelBuilder.Entity("MAWS.Models.Research_audit", b =>
                {
                    b.Property<char>("operation")
                        .HasColumnType("Char(1)");

                    b.Property<DateTime>("stamp")
                        .HasColumnType("Timestamp");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<decimal>("Completions_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("Discretionary_Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<decimal?>("Discretionary_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("ECR_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("Fifteen_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<bool>("IS_CURRENT")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Income_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("Pubs_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<decimal>("RCI_Pc")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<string>("ResearchID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("operation", "stamp");

                    b.ToTable("Research_audit");
                });

            modelBuilder.Entity("MAWS.Models.Service", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Hours")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<bool>("IS_CURRENT")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("ServiceID");

                    b.HasIndex("AcademicStaffID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("MAWS.Models.Service_audit", b =>
                {
                    b.Property<char>("operation")
                        .HasColumnType("Char(1)");

                    b.Property<DateTime>("stamp")
                        .HasColumnType("Timestamp");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Hours")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<bool>("IS_CURRENT")
                        .HasColumnType("boolean");

                    b.Property<int>("ServiceID")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("operation", "stamp");

                    b.ToTable("Service_audit");
                });

            modelBuilder.Entity("MAWS.Models.Supervision", b =>
                {
                    b.Property<int>("SupervisionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Hours")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<bool>("IS_CURRENT")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("SupervisionID");

                    b.HasIndex("AcademicStaffID");

                    b.ToTable("Supervision");
                });

            modelBuilder.Entity("MAWS.Models.Supervision_audit", b =>
                {
                    b.Property<char>("operation")
                        .HasColumnType("Char(1)");

                    b.Property<DateTime>("stamp")
                        .HasColumnType("Timestamp");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Comments")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Hours")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<bool>("IS_CURRENT")
                        .HasColumnType("boolean");

                    b.Property<int>("SupervisionID")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("operation", "stamp");

                    b.ToTable("Supervision_audit");
                });

            modelBuilder.Entity("MAWS.Models.TeachingActivity", b =>
                {
                    b.Property<int>("TeachingActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcademicStaffStaffID")
                        .HasColumnType("text");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<decimal>("ActivityHrs")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<decimal>("ActivityQty")
                        .HasColumnType("NUMERIC(3)");

                    b.Property<decimal>("ActivityWeeks")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("TeachingPeriod")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<bool>("Transferable")
                        .HasColumnType("boolean");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("UnitOfferingID")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("TeachingActivityID");

                    b.HasIndex("AcademicStaffStaffID");

                    b.HasIndex("UnitOfferingID");

                    b.ToTable("TeachingActivity");
                });

            modelBuilder.Entity("MAWS.Models.TeachingActivityAssignment", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcademicStaffStaffID")
                        .HasColumnType("text");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ActivityHrs")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<int?>("TeachingActivityID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("WorkloadHrs")
                        .HasColumnType("NUMERIC(6,2)");

                    b.HasKey("AssignmentID");

                    b.HasIndex("AcademicStaffStaffID");

                    b.HasIndex("TeachingActivityID");

                    b.ToTable("TeachingActivityAssignment");
                });

            modelBuilder.Entity("MAWS.Models.TeachingActivityAssignment_audit", b =>
                {
                    b.Property<char>("operation")
                        .HasColumnType("Char(1)");

                    b.Property<DateTime>("stamp")
                        .HasColumnType("Timestamp");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ActivityHrs")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<int>("AssignmentID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("StaffID")
                        .HasColumnType("text");

                    b.Property<int>("TeachingActivityID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("WorkloadHrs")
                        .HasColumnType("NUMERIC(6,2)");

                    b.HasKey("operation", "stamp");

                    b.ToTable("TeachingActivityAssignment_audit");
                });

            modelBuilder.Entity("MAWS.Models.TeachingPattern", b =>
                {
                    b.Property<string>("TeachingPatternID")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("EnrolmentStatus")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<decimal>("ExternalEnrolments")
                        .HasColumnType("NUMERIC(4)");

                    b.Property<decimal>("NoTeachingWeeks")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<string>("OfferingType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1)");

                    b.Property<decimal>("PU_GroupSize")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("PU_StaffAsClientQty")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("PU_StaffAsClientTNE_Qty")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("SGT_ClassSize")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("SGT_HrsPerSession")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("SGT_SessionsPerWeek")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<string>("TeachingPeriod")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<decimal>("TotalEnrolments")
                        .HasColumnType("NUMERIC(4)");

                    b.Property<bool>("UC_New")
                        .HasColumnType("boolean");

                    b.Property<decimal>("UC_TNE_Affiliates")
                        .HasColumnType("NUMERIC(1)");

                    b.Property<decimal>("UD_DiscretionHrs")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<string>("UD_DiscretionHrsComment")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("UD_Type")
                        .HasColumnType("VARCHAR(1)");

                    b.Property<string>("UU_Type")
                        .HasColumnType("VARCHAR(5)");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("UnitOfferingID")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<decimal>("WOCT_HrsPerSessionFIRST")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("WOCT_HrsPerSessionREPEAT")
                        .HasColumnType("NUMERIC(4,2)");

                    b.Property<decimal>("WOCT_SessionsPerWeekFIRST")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("WOCT_SessionsPerWeekREPEAT")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4)");

                    b.HasKey("TeachingPatternID");

                    b.HasIndex("AcademicStaffID");

                    b.HasIndex("UnitOfferingID");

                    b.ToTable("TeachingPattern");
                });

            modelBuilder.Entity("MAWS.Models.Unit", b =>
                {
                    b.Property<string>("UnitCode")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("VARCHAR(6)");

                    b.Property<bool>("ClientFlag")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<decimal>("CreditPoints")
                        .HasColumnType("NUMERIC(2)");

                    b.Property<decimal>("CreditPointsRatio")
                        .HasColumnType("NUMERIC(3,2)");

                    b.Property<string>("DisciplineID")
                        .HasColumnType("VARCHAR(6)");

                    b.Property<bool>("ExamFlag")
                        .HasColumnType("boolean");

                    b.Property<bool>("FieldworkFlag")
                        .HasColumnType("boolean");

                    b.Property<bool>("LabFlag")
                        .HasColumnType("boolean");

                    b.Property<bool>("PU_BaseHrsExtraFlag")
                        .HasColumnType("boolean");

                    b.Property<bool>("PU_OtherTeachingFlag")
                        .HasColumnType("boolean");

                    b.Property<bool>("ProjectFlag")
                        .HasColumnType("boolean");

                    b.Property<string>("TeachingPattern")
                        .HasColumnType("VARCHAR(6)");

                    b.Property<decimal>("Tier")
                        .HasColumnType("NUMERIC(1,0)");

                    b.Property<decimal>("UCMTierBaseHrs")
                        .HasColumnType("NUMERIC(5,2)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.HasKey("UnitCode");

                    b.HasIndex("DisciplineID");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("MAWS.Models.UnitOffering", b =>
                {
                    b.Property<string>("UnitOfferingID")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("AcademicStaffID")
                        .HasColumnType("VARCHAR(8)");

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Create_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Create_User")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2)");

                    b.Property<bool>("OUAE_Flag")
                        .HasColumnType("boolean");

                    b.Property<string>("OfferingType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1)");

                    b.Property<bool>("SGT_Flag")
                        .HasColumnType("boolean");

                    b.Property<string>("TeachingPeriod")
                        .IsRequired()
                        .HasColumnType("VARCHAR(6)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("VARCHAR(12)");

                    b.Property<DateTime>("Update_DateTime")
                        .HasColumnType("Timestamp");

                    b.Property<string>("Update_User")
                        .HasColumnType("text");

                    b.Property<bool>("WOCT_Flag")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Year")
                        .HasColumnType("NUMERIC(4,0)");

                    b.HasKey("UnitOfferingID");

                    b.HasIndex("AcademicStaffID");

                    b.HasIndex("UnitCode");

                    b.ToTable("UnitOffering");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MAWS.Models.UserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("UserRole");
                });

            modelBuilder.Entity("MAWS.Models.AspNetUserAcademicStaff", b =>
                {
                    b.HasOne("MAWS.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("AspNetUserAcademicStaff")
                        .HasForeignKey("MAWS.Models.AspNetUserAcademicStaff", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithOne("AspNetUserAcademicStaff")
                        .HasForeignKey("MAWS.Models.AspNetUserAcademicStaff", "StaffID")
                        .HasPrincipalKey("MAWS.Models.AcademicStaff", "AcademicStaffID");
                });

            modelBuilder.Entity("MAWS.Models.Discipline", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithOne("Discipline")
                        .HasForeignKey("MAWS.Models.Discipline", "HeadOfDiscipline")
                        .HasPrincipalKey("MAWS.Models.AcademicStaff", "AcademicStaffID");
                });

            modelBuilder.Entity("MAWS.Models.MiscTeachingActivity", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany("MiscTeachingActivityList")
                        .HasForeignKey("AcademicStaffID")
                        .HasPrincipalKey("AcademicStaffID");

                    b.HasOne("MAWS.Models.UnitOffering", "UnitOffering")
                        .WithMany("MiscTeachingActivityList")
                        .HasForeignKey("UnitOfferingID");
                });

            modelBuilder.Entity("MAWS.Models.Research", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany("ReasearchList")
                        .HasForeignKey("AcademicStaffID")
                        .HasPrincipalKey("AcademicStaffID");
                });

            modelBuilder.Entity("MAWS.Models.Service", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany("ServiceList")
                        .HasForeignKey("AcademicStaffID")
                        .HasPrincipalKey("AcademicStaffID");
                });

            modelBuilder.Entity("MAWS.Models.Supervision", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany("SupervisionList")
                        .HasForeignKey("AcademicStaffID")
                        .HasPrincipalKey("AcademicStaffID");
                });

            modelBuilder.Entity("MAWS.Models.TeachingActivity", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", null)
                        .WithMany("TeachingActivityList")
                        .HasForeignKey("AcademicStaffStaffID");

                    b.HasOne("MAWS.Models.UnitOffering", "UnitOffering")
                        .WithMany("TeachingActivityList")
                        .HasForeignKey("UnitOfferingID");
                });

            modelBuilder.Entity("MAWS.Models.TeachingActivityAssignment", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany()
                        .HasForeignKey("AcademicStaffStaffID");

                    b.HasOne("MAWS.Models.TeachingActivity", "TeachingActivity")
                        .WithMany("TeachingActivityAssignmentList")
                        .HasForeignKey("TeachingActivityID");
                });

            modelBuilder.Entity("MAWS.Models.TeachingPattern", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany("TeachingPatternList")
                        .HasForeignKey("AcademicStaffID")
                        .HasPrincipalKey("AcademicStaffID");

                    b.HasOne("MAWS.Models.UnitOffering", "UnitOffering")
                        .WithMany("TeachingPatternList")
                        .HasForeignKey("UnitOfferingID");
                });

            modelBuilder.Entity("MAWS.Models.Unit", b =>
                {
                    b.HasOne("MAWS.Models.Discipline", "Discipline")
                        .WithMany("UnitList")
                        .HasForeignKey("DisciplineID");
                });

            modelBuilder.Entity("MAWS.Models.UnitOffering", b =>
                {
                    b.HasOne("MAWS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany("UnitOfferingList")
                        .HasForeignKey("AcademicStaffID")
                        .HasPrincipalKey("AcademicStaffID");

                    b.HasOne("MAWS.Models.Unit", "Unit")
                        .WithMany("UnitOfferingList")
                        .HasForeignKey("UnitCode");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MAWS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MAWS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAWS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MAWS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
